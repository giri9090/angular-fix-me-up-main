{"ast":null,"code":"import { FormBuilder } from '@angular/forms';\nimport { AccountService } from 'libs/shared/services/src/lib/account.service';\nimport { map, withLatestFrom, startWith } from 'rxjs/operators';\nimport { of } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"libs/shared/services/src/lib/account.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/router\";\n\nconst _c0 = function (a1) {\n  return [\"/account\", a1];\n};\n\nfunction AccountSummaryComponent_tr_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"th\")(2, \"a\", 7);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"td\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"td\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const account_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(5, _c0, account_r1.id))(\"state\", account_r1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(account_r1.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(account_r1.balance);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(account_r1.currency);\n  }\n}\n\nexport class AccountSummaryComponent {\n  constructor(accountService, formBuilder) {\n    this.accountService = accountService;\n    this.formBuilder = formBuilder;\n    this.accounts$ = of([]);\n    this.currencies == [{\n      id: \"cad\",\n      value: \"CAD\"\n    }, {\n      id: \"usd\",\n      value: \"USD\"\n    }];\n    this.formGroup = formBuilder.group({\n      filter: [null]\n    });\n    this.accountService.getAccounts().subscribe(accounts => {\n      this.accounts$ = of(accounts);\n    });\n    this.filteredAccounts$ = this.formGroup.get('filter')?.valueChanges.pipe(startWith(''), withLatestFrom(this.accounts$), map(([val, accounts]) => !val ? accounts : accounts.filter(x => x.currency.toLowerCase().includes(val))));\n  }\n\n}\n\nAccountSummaryComponent.ɵfac = function AccountSummaryComponent_Factory(t) {\n  return new (t || AccountSummaryComponent)(i0.ɵɵdirectiveInject(i1.AccountService), i0.ɵɵdirectiveInject(i2.FormBuilder));\n};\n\nAccountSummaryComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AccountSummaryComponent,\n  selectors: [[\"sum-account-summary\"]],\n  decls: 23,\n  vars: 6,\n  consts: [[1, \"account-summary\"], [1, \"form-group\"], [\"scope\", \"col\"], [3, \"formGroup\"], [\"formControlName\", \"filter\"], [3, \"ngValue\"], [4, \"ngFor\", \"ngForOf\"], [3, \"routerLink\", \"state\"]],\n  template: function AccountSummaryComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1, \"Account Summary\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\", 0)(3, \"section\")(4, \"table\", 1)(5, \"tr\")(6, \"th\", 2);\n      i0.ɵɵtext(7, \"Account Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"th\", 2);\n      i0.ɵɵtext(9, \"Balance\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"th\", 2)(11, \"form\", 3)(12, \"label\");\n      i0.ɵɵtext(13, \"Account Type\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"select\", 4)(15, \"option\", 5);\n      i0.ɵɵtext(16, \"None\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"option\", 5);\n      i0.ɵɵtext(18, \"CAD\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"option\", 5);\n      i0.ɵɵtext(20, \"USD\");\n      i0.ɵɵelementEnd()()()()();\n      i0.ɵɵtemplate(21, AccountSummaryComponent_tr_21_Template, 8, 7, \"tr\", 6);\n      i0.ɵɵpipe(22, \"async\");\n      i0.ɵɵelementEnd()()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(11);\n      i0.ɵɵproperty(\"formGroup\", ctx.formGroup);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngValue\", ctx.cad);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngValue\", ctx.usd);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(22, 4, ctx.filteredAccounts$));\n    }\n  },\n  dependencies: [i3.NgForOf, i4.RouterLinkWithHref, i2.ɵNgNoValidate, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.SelectControlValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i3.AsyncPipe],\n  styles: [\"th[scope=col][_ngcontent-%COMP%] {\\n  border-bottom: 1px solid #333;\\n}\\n\\ntr[_ngcontent-%COMP%]:nth-child(2n) {\\n  background-color: #DEDEDE;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFjY291bnQtc3VtbWFyeS5jb21wb25lbnQuc2NzcyIsIi4uXFwuLlxcLi5cXC4uXFwuLlxcLi5cXC4uXFwuLlxcLi5cXFNhdHlhJTIwQ2FuYWRhXFxhbmd1bGFyLWZpeC1tZS11cC1tYWluXFxhbmd1bGFyLWZpeC1tZS11cC1tYWluXFxsaWJzXFxmZWF0dXJlXFxhY2NvdW50LXN1bW1hcnlcXHNyY1xcbGliXFxhY2NvdW50LXN1bW1hcnlcXGFjY291bnQtc3VtbWFyeS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLDZCQUFBO0FDQ0Y7O0FERUE7RUFDRSx5QkFBQTtBQ0NGIiwiZmlsZSI6ImFjY291bnQtc3VtbWFyeS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbInRoW3Njb3BlPSdjb2wnXSB7XHJcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICMzMzM7XHJcbn1cclxuXHJcbnRyOm50aC1jaGlsZCgybikge1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNERURFREU7XHJcbn0iLCJ0aFtzY29wZT1jb2xdIHtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICMzMzM7XG59XG5cbnRyOm50aC1jaGlsZCgybikge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjREVERURFO1xufSJdfQ== */\"]\n});","map":{"version":3,"mappings":"AAKA,SAASA,WAAT,QAAuC,gBAAvC;AAEA,SAASC,cAAT,QAA+B,8CAA/B;AACA,SAASC,GAAT,EAAcC,cAAd,EAA8BC,SAA9B,QAAoD,gBAApD;AACA,SAASC,EAAT,QAA+B,MAA/B;;;;;;;;;;;;;ICWMC,2BAAsD,CAAtD,EAAsD,IAAtD,EAAsD,CAAtD,EAAsD,GAAtD,EAAsD,CAAtD;IAEoEA;IAAcA;IAChFA;IAAIA;IAAmBA;IACvBA;IAAIA;IAAoBA;;;;;IAFjBA;IAAAA,uEAAuC,OAAvC,EAAuCC,UAAvC;IAA2DD;IAAAA;IAC9DA;IAAAA;IACAA;IAAAA;;;;ADRZ,OAAM,MAAOE,uBAAP,CAA8B;EAKlCC,YAAoBC,cAApB,EAA4DC,WAA5D,EAAoF;IAAhE;IAAwC;IAJ5D,iBAAmCN,EAAE,CAAC,EAAD,CAArC;IAKE,KAAKO,UAAL,IAAiB,CAAC;MAACC,EAAE,EAAC,KAAJ;MAAUC,KAAK,EAAC;IAAhB,CAAD,EAAwB;MAACD,EAAE,EAAC,KAAJ;MAAUC,KAAK,EAAC;IAAhB,CAAxB,CAAjB;IACA,KAAKC,SAAL,GAAiBJ,WAAW,CAACK,KAAZ,CAAkB;MAAEC,MAAM,EAAE,CAAC,IAAD;IAAV,CAAlB,CAAjB;IACA,KAAKP,cAAL,CAAoBQ,WAApB,GAAkCC,SAAlC,CAA6CC,QAAD,IAAa;MACvD,KAAKC,SAAL,GAAiBhB,EAAE,CAACe,QAAD,CAAnB;IACD,CAFD;IAIE,KAAKE,iBAAL,GAAyB,KAAKP,SAAL,CAAeQ,GAAf,CAAmB,QAAnB,GAA8BC,YAA9B,CAA2CC,IAA3C,CACvBrB,SAAS,CAAC,EAAD,CADc,EAEvBD,cAAc,CAAC,KAAKkB,SAAN,CAFS,EAGvBnB,GAAG,CAAC,CAAC,CAACwB,GAAD,EAAMN,QAAN,CAAD,KACJ,CAACM,GAAD,GAAON,QAAP,GAAkBA,QAAQ,CAACH,MAAT,CAAiBU,CAAD,IAAOA,CAAC,CAACC,QAAF,CAAWC,WAAX,GAAyBC,QAAzB,CAAkCJ,GAAlC,CAAvB,CADf,CAHoB,CAAzB;EAOH;;AAnBiC;;;mBAAvBlB,yBAAuBF;AAAA;;;QAAvBE;EAAuBuB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MChBpC7B;MAAIA;MAAeA;MAGnBA,+BAA6B,CAA7B,EAA6B,SAA7B,EAA6B,CAA7B,EAA6B,OAA7B,EAA6B,CAA7B,EAA6B,CAA7B,EAA6B,IAA7B,EAA6B,CAA7B,EAA6B,IAA7B,EAA6B,CAA7B;MAIwBA;MAAYA;MAC5BA;MAAgBA;MAAOA;MACvBA,+BAAgB,EAAhB,EAAgB,MAAhB,EAAgB,CAAhB,EAAgB,EAAhB,EAAgB,OAAhB;MAESA;MAAYA;MACnBA,mCAAiC,EAAjC,EAAiC,QAAjC,EAAiC,CAAjC;MACuBA;MAAIA;MACzBA;MAAwBA;MAAGA;MAC3BA;MAAwBA;MAAGA;MAKjCA;;MAMFA;;;;MAhBYA;MAAAA;MAIIA;MAAAA;MACAA;MAAAA;MAKUA;MAAAA","names":["FormBuilder","AccountService","map","withLatestFrom","startWith","of","i0","account_r1","AccountSummaryComponent","constructor","accountService","formBuilder","currencies","id","value","formGroup","group","filter","getAccounts","subscribe","accounts","accounts$","filteredAccounts$","get","valueChanges","pipe","val","x","currency","toLowerCase","includes","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Office\\Projects\\Satya Canada\\angular-fix-me-up-main\\angular-fix-me-up-main\\libs\\feature\\account-summary\\src\\lib\\account-summary\\account-summary.component.ts","C:\\Office\\Projects\\Satya Canada\\angular-fix-me-up-main\\angular-fix-me-up-main\\libs\\feature\\account-summary\\src\\lib\\account-summary\\account-summary.component.html"],"sourcesContent":["/** \n * TODO: 10. Asynchronous Programming (RxJS)\n * TODO: 13. Angular (NX) Architecture\n*/\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { Account } from 'libs/shared/services/src/lib/account';\nimport { AccountService } from 'libs/shared/services/src/lib/account.service';\nimport { map, withLatestFrom, startWith, tap } from 'rxjs/operators';\nimport { of, Observable } from 'rxjs';\n\n@Component({\n  selector: 'sum-account-summary',\n  templateUrl: './account-summary.component.html',\n  styleUrls: ['./account-summary.component.scss'],\n})\nexport class AccountSummaryComponent {\n  accounts$: Observable<Account[]> = of([]);\n  filteredAccounts$: Observable<Account[]>| undefined;\n  currencies:[] | undefined;\n  formGroup: FormGroup;\n  constructor(private accountService: AccountService, private formBuilder: FormBuilder) {\n    this.currencies==[{id:\"cad\",value:\"CAD\"},{id:\"usd\",value:\"USD\"}];\n    this.formGroup = formBuilder.group({ filter: [null] });\n    this.accountService.getAccounts().subscribe((accounts) => {\n      this.accounts$ = of(accounts);\n    });\n\n      this.filteredAccounts$ = this.formGroup.get('filter')?.valueChanges.pipe(\n        startWith(''),\n        withLatestFrom(this.accounts$),\n        map(([val, accounts]) =>\n        !val ? accounts : accounts.filter((x) => x.currency.toLowerCase().includes(val))\n        )\n        );\n  }\n  // accounts: Account[] = [];\n  // accountsFilter = '';\n\n  // filterAccounts(accounts: Account[]) {\n  //   return accounts.filter(acc => acc.currency === this.accountsFilter || this.accountsFilter === '');\n  // }\n}\n","<h1>Account Summary</h1>\r\n<!-- TODO: 6. Angular ngFor, refactor, and bonus points -->\r\n<!-- TODO: 7. Accessibility, table markup, form control -->\r\n<div class=\"account-summary\">\r\n  <section>\r\n    <table class=\"form-group\">\r\n      <tr>\r\n        <th scope=\"col\">Account Name</th>\r\n        <th scope=\"col\">Balance</th>\r\n        <th scope=\"col\">\r\n          <form [formGroup]=\"formGroup\">\r\n          <label>Account Type</label>\r\n          <select formControlName=\"filter\">\r\n            <option [ngValue]=\"\">None</option>\r\n            <option [ngValue]=\"cad\">CAD</option>\r\n            <option [ngValue]=\"usd\">USD</option>\r\n          </select>\r\n        </form>\r\n        </th>\r\n      </tr>\r\n      <tr *ngFor=\"let account of filteredAccounts$ | async\">\r\n        <!-- TODO: 8. route to detail view -->\r\n        <th><a [routerLink]=\"['/account', account.id]\" [state]=\"account\" >{{account.id}}</a></th>\r\n        <td>{{account.balance}}</td>\r\n        <td>{{account.currency}}</td>\r\n      </tr>\r\n    </table>\r\n  </section>\r\n</div>"]},"metadata":{},"sourceType":"module"}